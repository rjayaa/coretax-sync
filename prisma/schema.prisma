generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model T_L_EFW_TAX_INVOICE_DETAIL {
  id                         String                               @id @default(dbgenerated("(uuid())")) @db.Char(36)
  invoice_id                 String                               @db.Char(36)
  item_type                  T_L_EFW_TAX_INVOICE_DETAIL_item_type
  goods_id                   String?                              @db.Char(36)
  service_id                 String?                              @db.Char(36)
  item_name                  String                               @db.VarChar(255)
  unit                       String                               @db.VarChar(50)
  unit_price                 Decimal                              @db.Decimal(20, 2)
  quantity                   Decimal                              @db.Decimal(20, 2)
  total_price                Decimal                              @db.Decimal(20, 2)
  discount                   Decimal?                             @default(0.00) @db.Decimal(20, 2)
  down_payment               Decimal?                             @default(0.00) @db.Decimal(20, 2)
  dpp                        Decimal                              @db.Decimal(20, 2)
  dpp_other                  Decimal                              @db.Decimal(20, 2)
  ppn_rate                   Decimal?                             @default(12.00) @db.Decimal(5, 2)
  ppn                        Decimal                              @db.Decimal(20, 2)
  ppnbm_rate                 Decimal?                             @default(10.00) @db.Decimal(5, 2)
  ppnbm                      Decimal                              @db.Decimal(20, 2)
  created_at                 DateTime                             @default(now()) @db.Timestamp(0)
  created_by                 String                               @db.VarChar(20)
  updated_at                 DateTime?                            @db.Timestamp(0)
  updated_by                 String?                              @db.VarChar(20)
  T_L_EFW_TAX_MASTER_BARANG  T_L_EFW_TAX_MASTER_BARANG?           @relation(fields: [goods_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_goods")
  T_L_EFW_TAX_INVOICE_HEADER T_L_EFW_TAX_INVOICE_HEADER           @relation(fields: [invoice_id], references: [id], onUpdate: Restrict, map: "fk_invoice")
  T_L_EFW_TAX_MASTER_JASA    T_L_EFW_TAX_MASTER_JASA?             @relation(fields: [service_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_service")

  @@index([goods_id], map: "fk_goods")
  @@index([invoice_id], map: "fk_invoice")
  @@index([service_id], map: "fk_service")
}

model T_L_EFW_TAX_INVOICE_HEADER {
  id                          String                                      @id @default(dbgenerated("(uuid())")) @db.Char(36)
  customer_id                 String                                      @db.Char(36)
  company_id                  String                                      @db.Char(36)
  transaction_type            T_L_EFW_TAX_INVOICE_HEADER_transaction_type
  invoice_date                DateTime                                    @db.Date
  invoice_type                String                                      @default("Normal") @db.VarChar(50)
  transaction_code            String                                      @db.VarChar(50)
  additional_info             String?                                     @db.Text
  supporting_doc              String?                                     @db.Text
  reference                   String?                                     @db.VarChar(100)
  facility_stamp              String?                                     @db.VarChar(100)
  seller_idtku                String?                                     @db.VarChar(50)
  buyer_doc_type              String?                                     @default("TIN") @db.VarChar(50)
  buyer_country               String?                                     @default("IDN") @db.VarChar(3)
  buyer_doc_number            String?                                     @db.VarChar(50)
  buyer_email                 String?                                     @db.VarChar(255)
  buyer_idtku                 String?                                     @db.VarChar(50)
  notes                       String?                                     @db.Text
  ctrl                        String?                                     @db.VarChar(50)
  reference_dp_invoice        String?                                     @db.VarChar(100)
  created_at                  DateTime                                    @default(now()) @db.Timestamp(0)
  created_by                  String                                      @db.VarChar(20)
  updated_at                  DateTime?                                   @db.Timestamp(0)
  updated_by                  String?                                     @db.VarChar(20)
  T_L_EFW_TAX_INVOICE_DETAIL  T_L_EFW_TAX_INVOICE_DETAIL[]
  T_L_EFW_TAX_MASTER_COMPANY  T_L_EFW_TAX_MASTER_COMPANY                  @relation(fields: [company_id], references: [id], onUpdate: Restrict, map: "fk_company")
  T_L_EFW_TAX_MASTER_CUSTOMER T_L_EFW_TAX_MASTER_CUSTOMER                 @relation(fields: [customer_id], references: [id], onUpdate: Restrict, map: "fk_customer")
  T_L_EFW_TAX_INVOICE_STATUS  T_L_EFW_TAX_INVOICE_STATUS[]

  @@index([company_id], map: "fk_company")
  @@index([customer_id], map: "fk_customer")
  @@index([invoice_date], map: "idx_invoice_date")
}

model T_L_EFW_TAX_INVOICE_STATUS {
  id                         String                            @id @default(dbgenerated("(uuid())")) @db.Char(36)
  invoice_id                 String                            @db.Char(36)
  status                     T_L_EFW_TAX_INVOICE_STATUS_status
  notes                      String?                           @db.Text
  created_at                 DateTime                          @default(now()) @db.Timestamp(0)
  created_by                 String                            @db.VarChar(20)
  T_L_EFW_TAX_INVOICE_HEADER T_L_EFW_TAX_INVOICE_HEADER        @relation(fields: [invoice_id], references: [id], onUpdate: Restrict, map: "fk_invoice_status")

  @@index([invoice_id, status], map: "idx_invoice_status")
}

model T_L_EFW_TAX_MASTER_BARANG {
  id                         String                       @id @default(dbgenerated("(uuid())")) @db.Char(36)
  goods_services             String                       @db.Text
  section                    String?                      @db.Text
  chapter                    String?                      @db.Text
  group                      String?                      @db.Text
  english                    String?                      @db.Text
  bahasa                     String?                      @db.Text
  T_L_EFW_TAX_INVOICE_DETAIL T_L_EFW_TAX_INVOICE_DETAIL[]
}

model T_L_EFW_TAX_MASTER_COMPANY {
  id                         String                       @id @default(dbgenerated("(uuid())")) @db.Char(36)
  company_name               String                       @db.VarChar(50)
  company_code               String                       @db.VarChar(50)
  idnik                      String                       @db.VarChar(20)
  status                     String                       @db.VarChar(50)
  T_L_EFW_TAX_INVOICE_HEADER T_L_EFW_TAX_INVOICE_HEADER[]
  T_L_EFW_TAX_USER_ROLES     T_L_EFW_TAX_USER_ROLES?

  @@unique([idnik, company_code], map: "uk_idnik_company")
}

model T_L_EFW_TAX_MASTER_CUSTOMER {
  id                         String                       @id @default(dbgenerated("(uuid())")) @db.Char(36)
  no                         String                       @db.VarChar(50)
  npwp                       String                       @db.VarChar(25)
  nama                       String                       @db.Text
  jalan                      String?                      @db.Text
  blok                       String?                      @db.Text
  nomor                      String?                      @db.Text
  rt                         String?                      @db.VarChar(3)
  rw                         String?                      @db.VarChar(3)
  kecamatan                  String?                      @db.Text
  kelurahan                  String?                      @db.Text
  kabupaten                  String?                      @db.Text
  propinsi                   String?                      @db.Text
  kode_pos                   String?                      @db.VarChar(10)
  nomor_telepon              String?                      @db.Text
  T_L_EFW_TAX_INVOICE_HEADER T_L_EFW_TAX_INVOICE_HEADER[]
}

model T_L_EFW_TAX_MASTER_JASA {
  id                         String                       @id @default(dbgenerated("(uuid())")) @db.Char(36)
  goods_services             String                       @db.Text
  section                    String?                      @db.Text
  chapter                    String?                      @db.Text
  group                      String?                      @db.Text
  english                    String?                      @db.Text
  bahasa                     String?                      @db.Text
  T_L_EFW_TAX_INVOICE_DETAIL T_L_EFW_TAX_INVOICE_DETAIL[]
}

model T_L_EFW_TAX_USER_ROLES {
  id                         String                     @id @default(dbgenerated("(uuid())")) @db.Char(36)
  idnik                      String                     @db.VarChar(20)
  company_code               String                     @db.VarChar(50)
  is_active                  Boolean?                   @default(true)
  T_L_EFW_TAX_MASTER_COMPANY T_L_EFW_TAX_MASTER_COMPANY @relation(fields: [idnik, company_code], references: [idnik, company_code], map: "fk_company_code")

  @@unique([idnik, company_code], map: "uk_idnik_role")
}

enum T_L_EFW_TAX_INVOICE_STATUS_status {
  DRAFT
  PENDING
  APPROVED
  REJECTED
  EXPORTED
}

enum T_L_EFW_TAX_INVOICE_DETAIL_item_type {
  GOODS
  SERVICE
}

enum T_L_EFW_TAX_INVOICE_HEADER_transaction_type {
  FULL_PAYMENT
  DOWN_PAYMENT
  REMAINING_PAYMENT
}
